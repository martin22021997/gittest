@v1.5.3
interface i1( int ansteuerung[], int prioritaet[] ) : int zustand[];
//mehrere Instanzen
@toplevel
@v2.1.3
connector toplevelconn() : {
conn1();
}
@v2.4.1
connector conn1() : {
//2 Motoren, 2 Gruppen
PORT int n;
PORT int m;


PORT int schalter_anst[1..n][1..m];
PORT int motor_prt[1..n][1..m];
PORT int motor_zust[1..n][1..m];

@v1
BASIC priorisierung[1..n];


priorisierung[i=1..n]( schalter_anst[i][1..m], motor_prt[i][1..m] ) : motor_zust[i][1..m];

}
//In Minor Version 2.5 als deprecated markiert
//In Version 2.4 hinzugef√ºgt
@deprecated:v2.5
@v2.4.3
basic priorisierung implements i1( int ansteuerung[], int prioritaet[] ) : int zustand[]{

if( ansteuerung.length != prioritaet.length || prioritaet.length != zustand.length ){
EXIT(error);
}

int hoechste_prioritaet_index = -1;
int hoechste_prioritaet_wert = -1;

for(int i=0; i<prioritaet.length; i++){
if( prioritaet[i] > hoechste_prioritaet_wert ){
hoechste_prioritaet_index = i;
hoechste_prioritaet_wert = prioritaet[i];
}
}

for(int i=0; i<prioritaet.length; i++){
zustand[i] = 0;
}

zustand[hoechste_prioritaet_index] = ansteuerung[hoechste_prioritaet_index];

}